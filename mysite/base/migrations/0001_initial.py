# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-05-26 02:10
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import mysite.base.operation


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('identified', models.CharField(blank=True, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdditionData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('object_id', models.CharField(max_length=100, verbose_name='对象ID')),
                ('key', models.CharField(max_length=64, verbose_name='键')),
                ('value', models.CharField(blank=True, max_length=128, verbose_name='值')),
                ('data', models.TextField(blank=True, verbose_name='数据')),
                ('delete_time', models.DateTimeField(blank=True, editable=False, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType', verbose_name='对象类型')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '增加的数据',
                'ordering': ('-create_time',),
            },
        ),
        migrations.CreateModel(
            name='AppOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_operator', models.CharField(editable=False, max_length=30, null=True, verbose_name='修改者')),
                ('change_time', models.DateTimeField(auto_now=True, null=True, verbose_name='修改时间')),
                ('create_operator', models.CharField(editable=False, max_length=30, null=True, verbose_name='创建者')),
                ('create_time', models.DateTimeField(editable=False, null=True, verbose_name='创建时间')),
                ('delete_operator', models.CharField(editable=False, max_length=30, null=True, verbose_name='删除者')),
                ('delete_time', models.DateTimeField(editable=False, null=True, verbose_name='删除时间')),
                ('status', models.SmallIntegerField(default=0, editable=False, verbose_name='状态')),
                ('optname', models.CharField(default='', max_length=50, verbose_name='参数名字')),
                ('value', models.CharField(default='', max_length=100, verbose_name='参数值')),
                ('discribe', models.CharField(blank=True, max_length=100, null=True, verbose_name='描述')),
            ],
            options={
                'verbose_name': '系统参数',
            },
            bases=(models.Model, mysite.base.operation.OperationBase),
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='BaseCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_operator', models.CharField(editable=False, max_length=30, null=True, verbose_name='修改者')),
                ('change_time', models.DateTimeField(auto_now=True, null=True, verbose_name='修改时间')),
                ('create_operator', models.CharField(editable=False, max_length=30, null=True, verbose_name='创建者')),
                ('create_time', models.DateTimeField(editable=False, null=True, verbose_name='创建时间')),
                ('delete_operator', models.CharField(editable=False, max_length=30, null=True, verbose_name='删除者')),
                ('delete_time', models.DateTimeField(editable=False, null=True, verbose_name='删除时间')),
                ('status', models.SmallIntegerField(default=0, editable=False, verbose_name='状态')),
                ('content', models.CharField(max_length=30, verbose_name='代码')),
                ('content_class', models.IntegerField(blank=True, default=0, editable=False, null=True, verbose_name='代码类别')),
                ('display', models.CharField(blank=True, max_length=30, null=True, verbose_name='显示')),
                ('value', models.CharField(max_length=30, verbose_name='值')),
                ('remark', models.CharField(blank=True, max_length=200, null=True, verbose_name='备注')),
                ('is_add', models.CharField(blank=True, editable=False, max_length=4, null=True, verbose_name='是否是用户添加的')),
            ],
            options={
                'verbose_name': '基础代码表',
            },
            bases=(models.Model, mysite.base.operation.OperationBase),
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='DataTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_operator', models.CharField(editable=False, max_length=30, null=True, verbose_name='修改者')),
                ('change_time', models.DateTimeField(auto_now=True, null=True, verbose_name='修改时间')),
                ('create_operator', models.CharField(editable=False, max_length=30, null=True, verbose_name='创建者')),
                ('create_time', models.DateTimeField(editable=False, null=True, verbose_name='创建时间')),
                ('delete_operator', models.CharField(editable=False, max_length=30, null=True, verbose_name='删除者')),
                ('delete_time', models.DateTimeField(editable=False, null=True, verbose_name='删除时间')),
                ('status', models.SmallIntegerField(default=0, editable=False, verbose_name='状态')),
                ('property', models.CharField(max_length=100)),
                ('language', models.CharField(max_length=10)),
                ('value', models.CharField(max_length=200)),
                ('display', models.CharField(max_length=400)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name': '翻译为数据',
            },
            bases=(models.Model, mysite.base.operation.OperationBase),
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='LogEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField(auto_now=True, verbose_name='动作时间')),
                ('object_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='对象ID')),
                ('object_repr', models.CharField(max_length=200, verbose_name='对象描述')),
                ('action_flag', models.PositiveSmallIntegerField(choices=[(1, '增加'), (2, '修改'), (3, '删除'), (4, '其他'), (5, '登录'), (6, '导出')], verbose_name='动作标识')),
                ('change_message', models.CharField(blank=True, max_length=512, verbose_name='改变消息')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logentryofct', to='contenttypes.ContentType', verbose_name='对象类型')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logentryofuser', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '日志记录',
                'verbose_name_plural': '日志记录',
                'db_table': 'action_log',
                'ordering': ('-action_time',),
            },
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_operator', models.CharField(editable=False, max_length=30, null=True, verbose_name='修改者')),
                ('change_time', models.DateTimeField(auto_now=True, null=True, verbose_name='修改时间')),
                ('create_operator', models.CharField(editable=False, max_length=30, null=True, verbose_name='创建者')),
                ('create_time', models.DateTimeField(editable=False, null=True, verbose_name='创建时间')),
                ('delete_operator', models.CharField(editable=False, max_length=30, null=True, verbose_name='删除者')),
                ('delete_time', models.DateTimeField(editable=False, null=True, verbose_name='删除时间')),
                ('status', models.SmallIntegerField(default=0, editable=False, verbose_name='状态')),
                ('name', models.CharField(max_length=30)),
                ('app_label', models.CharField(max_length=30)),
                ('catalog', models.CharField(max_length=30)),
                ('group', models.CharField(max_length=30)),
                ('widget', models.CharField(max_length=400)),
                ('required', models.BooleanField()),
                ('validator', models.CharField(max_length=400)),
                ('verbose_name', models.CharField(max_length=80)),
                ('help_text', models.CharField(max_length=160)),
                ('visible', models.BooleanField()),
                ('default', models.CharField(max_length=100)),
                ('read_only', models.BooleanField(default=False)),
                ('for_personal', models.BooleanField(default=True)),
                ('type', models.CharField(default='CharField', max_length=50)),
            ],
            options={
                'verbose_name': '个性设置',
            },
            bases=(models.Model, mysite.base.operation.OperationBase),
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='PersonalOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_operator', models.CharField(editable=False, max_length=30, null=True, verbose_name='修改者')),
                ('change_time', models.DateTimeField(auto_now=True, null=True, verbose_name='修改时间')),
                ('create_operator', models.CharField(editable=False, max_length=30, null=True, verbose_name='创建者')),
                ('create_time', models.DateTimeField(editable=False, null=True, verbose_name='创建时间')),
                ('delete_operator', models.CharField(editable=False, max_length=30, null=True, verbose_name='删除者')),
                ('delete_time', models.DateTimeField(editable=False, null=True, verbose_name='删除时间')),
                ('status', models.SmallIntegerField(default=0, editable=False, verbose_name='状态')),
                ('value', models.CharField(max_length=100)),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Option')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '个人选项',
            },
            bases=(models.Model, mysite.base.operation.OperationBase),
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='StrResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_operator', models.CharField(editable=False, max_length=30, null=True, verbose_name='修改者')),
                ('change_time', models.DateTimeField(auto_now=True, null=True, verbose_name='修改时间')),
                ('create_operator', models.CharField(editable=False, max_length=30, null=True, verbose_name='创建者')),
                ('create_time', models.DateTimeField(editable=False, null=True, verbose_name='创建时间')),
                ('delete_operator', models.CharField(editable=False, max_length=30, null=True, verbose_name='删除者')),
                ('delete_time', models.DateTimeField(editable=False, null=True, verbose_name='删除时间')),
                ('status', models.SmallIntegerField(default=0, editable=False, verbose_name='状态')),
                ('app', models.CharField(blank=True, max_length=20, null=True)),
                ('str', models.CharField(max_length=400)),
            ],
            options={
                'abstract': False,
                'ordering': ['-change_time'],
            },
            bases=(models.Model, mysite.base.operation.OperationBase),
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='StrTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_operator', models.CharField(editable=False, max_length=30, null=True, verbose_name='修改者')),
                ('change_time', models.DateTimeField(auto_now=True, null=True, verbose_name='修改时间')),
                ('create_operator', models.CharField(editable=False, max_length=30, null=True, verbose_name='创建者')),
                ('create_time', models.DateTimeField(editable=False, null=True, verbose_name='创建时间')),
                ('delete_operator', models.CharField(editable=False, max_length=30, null=True, verbose_name='删除者')),
                ('delete_time', models.DateTimeField(editable=False, null=True, verbose_name='删除时间')),
                ('status', models.SmallIntegerField(default=0, editable=False, verbose_name='状态')),
                ('language', models.CharField(max_length=10)),
                ('display', models.CharField(max_length=400)),
                ('str', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.StrResource')),
            ],
            options={
                'verbose_name': '翻译为字符串资源',
            },
            bases=(models.Model, mysite.base.operation.OperationBase),
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='SystemOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_operator', models.CharField(editable=False, max_length=30, null=True, verbose_name='修改者')),
                ('change_time', models.DateTimeField(auto_now=True, null=True, verbose_name='修改时间')),
                ('create_operator', models.CharField(editable=False, max_length=30, null=True, verbose_name='创建者')),
                ('create_time', models.DateTimeField(editable=False, null=True, verbose_name='创建时间')),
                ('delete_operator', models.CharField(editable=False, max_length=30, null=True, verbose_name='删除者')),
                ('delete_time', models.DateTimeField(editable=False, null=True, verbose_name='删除时间')),
                ('status', models.SmallIntegerField(default=0, editable=False, verbose_name='状态')),
                ('value', models.CharField(max_length=100)),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Option')),
            ],
            options={
                'verbose_name': '系统参数',
            },
            bases=(models.Model, mysite.base.operation.OperationBase),
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='personaloption',
            unique_together=set([('option', 'user')]),
        ),
    ]
